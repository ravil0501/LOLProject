@model LOLProject.Models.ChoosenHero
@{
    ViewData["Title"] = "ChooseHero";
}
<link rel="stylesheet" href="~/css/Items.css">
<link rel="stylesheet" href="~/css/site.css">

@{
    var hero = (from a in Model.Context.Heroes
                where a.NameHero == Model.NameHero
                select a).FirstOrDefault();
    if (!string.IsNullOrEmpty(Model.ItemName))
    {
        Model.AddedItems.Add(Model.ItemName);
    }
    double HP = 0, Mana = 0, Armor = 0, MagicResist = 0, Ap = 0, Movement = 0, Crit = 0, Ad = 0;
    double? AttackSpeed = 0;
    LOLProject.Model.BaseScale? baseScale = new LOLProject.Model.BaseScale();
    LOLProject.Model.Scale? scale = new LOLProject.Model.Scale();
    @if (Model.NameHero != null)
    {
        baseScale = (from a in Model.Context.BaseScales
                         where a.NameHero == Model.NameHero
                         select a).Single();
        scale = (from a in Model.Context.Scales
                     where a.NameHero == Model.NameHero
                     select a).Single();
        AttackSpeed = baseScale.SpeedAttack;
        foreach (var b in Model.AddedItems)
        {
            var item = (from a in Model.Context.Items
                        where a.ItemName == b
                        select a).Single();
            if (item.Hp != null)
            {
                HP += Convert.ToDouble(item.Hp);
            }
            if (item.Armor != null)
            {
                Armor += Convert.ToDouble(item.Armor);
            }
            if (item.Ad != null)
            {
                Ad += Convert.ToDouble(item.Ad);
            }
            if (item.Ap != null)
            {
                Ap += Convert.ToDouble(item.Ap);
            }
            if (item.Movement != null)
            {
                Movement += Convert.ToDouble(item.Movement);
            }
            if (item.AttackSpeed != null)
            {
                double atSpeed = Convert.ToDouble(item.AttackSpeed) / 100;
                AttackSpeed += AttackSpeed * atSpeed;
            }
            if (item.Crit != null)
            {
                Crit += Convert.ToDouble(item.Crit);
            }
        }
        HP += Convert.ToDouble(baseScale.Health + (scale.Health * Model.LevelHero));
        Mana += Convert.ToDouble(baseScale.Mana + (scale.Mana * Model.LevelHero));
        Armor += Convert.ToDouble(baseScale.Armor + (scale.Armor * Model.LevelHero));
        MagicResist += Convert.ToDouble(baseScale.ResistMagic + (scale.ResistMagic * Model.LevelHero));
        Ad += Convert.ToDouble(baseScale.Ad + (scale.Damage * Model.LevelHero));
        Movement += Convert.ToDouble(baseScale.MoveSpeed);
    }
}

<div style="background-color: #373636;" class="container px-1 mx-0 my-0 d-flex min-vh-100">
    <div class="col-auto col-md-3 col-xl-2 col-sm-3 h-auto" id="sidebar">
        <div class="d-flex flex-column align-items-center align-items-sm-start px-2 pt-2 text-white h-100">
            <p id="Iterations" class="pt-5 align-self-center">Iterations</p>
            <input id="iterationsInput" class="align-self-center w-100" type="number" min="1" max="10" value="5" placeholder="Итерации" />
            @if(Model.NameHero != null)
            {
                <button id="simulateButton" onclick="Simulate('@Ad','@AttackSpeed','@Crit')" class="btn btn-primary align-self-center m-3 w-100 p-2 p-sm-0">Симуляция</button>
            }
            else
            {
                <p id="Iterations" class="pt-5 align-self-center">Выберите героя</p>
            }
            <form method="post" asp-action="ChooseHero">
                <div class="d-flex my-lg-3 my-1" style="border-bottom:2px solid white">
                    <p class="simulatePar align-self-center mr-4 mb-0 pb-0 w-100 p-sm-0 float-right">Уровень</p>
                    <input type="number" asp-for="LevelHero" value="@Model.LevelHero" min="1" max="18" class="simulateInfoInput col-8"/>
                </div>
                <input type="hidden" asp-for="NameHero" value="@Model.NameHero" />
                @for (int i = 0; i < Model.AddedItems.Count; i++)
                {
                    <input type="hidden" asp-for="AddedItems[i]" value="@Model.AddedItems[i]" />
                }
                <button type="submit" id="simulateButton" class="btn btn-primary align-self-center m-1 w-100 p-2 p-sm-0">Выбрать</button>
            </form>
            <p class="align-self-center m-3 mt-5 w-100 p-2 p-sm-0">Stats</p>
            <div class="d-flex my-lg-3 my-1" style="border-bottom:2px solid white">
                <p class="simulatePar align-self-center mr-4 mb-0 pb-0 w-100 p-sm-0 float-right">HP</p>
                <input id="hpInput" class="simulateInfoInput col-8" min="500" value="1500" maxlength="6" type="number" style="height:auto" />
            </div>
            <div class="d-flex my-lg-3 my-1" style="border-bottom:2px solid white">
                <p class="simulatePar align-self-center w-100 mr-4 mb-0 pb-0 p-sm-0 float-left">AP</p>
                <input id="apInput" class="simulateInfoInput col-8" min="0" value="100" maxlength="6" type="number" style="height:auto" />
            </div>
            <div class="d-flex my-lg-3 my-1" style="border-bottom:2px solid white">
                <p class="simulatePar align-self-center mr-4 mb-0 pb-0 w-100 p-sm-0 float-right">AD</p>
                <input id="adInput" class="simulateInfoInput col-8" min="30" value="100" maxlength="6" type="number" style="height:auto" />
            </div>
            <div class="d-flex my-lg-3 my-1" style="border-bottom:2px solid white">
                <p class="simulatePar align-self-center mb-0 pb-0 w-100 p-sm-0 float-right">Armor</p>
                <input id="armorInput" class="simulateInfoInput col-8" min="0" value="100" maxlength="6" type="number" style="height:auto" />
            </div>
            <div class="d-flex my-lg-3 my-1" style="border-bottom:2px solid white">
                <p class="simulatePar align-self-center mb-0 pb-0 w-100 p-sm-0 float-right">Speed</p>
                <input id="speedInput" name="mySpeedInput" class="simulateInfoInput col-8" min="0" value="1500" maxlength="6" type="number" style="height:auto" />
            </div>
        </div>
    </div>
    <div class ="d-flex container w-100 h-100">
        @if (hero != null)
        {
            <div class="mr-lg-4 mr-md-2 pt-2 col-5 mb-1 float-start">
                <img class="col col-11 h-auto align-self-center" src="data:image/png;base64,@Convert.ToBase64String(hero.ImageHero)" />
                <p style="color: white;">@hero.NameHero</p>
            </div>
        }
        
        @if (hero == null)
        {
            <form method="post" asp-action="Hero" class="pt-2">
                <input type="hidden" asp-for="NameHero" value="@Model.NameHero" />
                <input type="hidden" asp-for="LevelHero" value="@Model.LevelHero" />
                @for (int i = 0; i < Model.AddedItems.Count; i++)
                {
                    <input type="hidden" asp-for="AddedItems[i]" value="@Model.AddedItems[i]" />
                }
                <button class="chooseButton" type="submit">Выбрать героя</button>
            </form>
        }
        <div class="mr-1 ml-0 pt-2 col-2">
            <form method="post" asp-action="ChooseItems">
                <input type="hidden" asp-for="NameHero" value="@Model.NameHero" />
                <input type="hidden" asp-for="LevelHero" value="@Model.LevelHero"/>
                @for (int i = 0; i < Model.AddedItems.Count; i++)
                {
                    <input type="hidden" asp-for="AddedItems[i]" value="@Model.AddedItems[i]" />
                    var item = (from a in Model.Context.Items
                                where a.ItemName == Model.AddedItems[i]
                                select a).Single();
                    <img class="col-4 float-left py-1 px-1 h-auto align-self-center" src="data:image/png;base64,@Convert.ToBase64String(item.ImageItem)" />
                }
                @if (Model.AddedItems.Count < 6)
                {
                    <button class="chooseButton" type="submit">Выбрать предмет</button>
                }
                
            </form>
        </div>
        @if(Model.NameHero != null)
        {
            <div class="col-3">
            <h5 class="toClose heroStats">Базовые Характеристики</h5>
            <table class="col toClose">
                <tr>
                    <td><span id="healthSpan" class="heroStats col-6 float-start toClose">Здоровье</span></td>
                    <td><span id="averageHealthSpan" class="heroStats col-6 toClose">@HP</span></td>
                </tr>
                <tr>
                    <td><span id="manaSpan" class="heroStats col-6 float-start toClose">Мана</span></td>
                    <td><span id="averageManaSpan" class="heroStats col-6 toClose">@Mana</span></td>
                </tr>
                <tr>
                    <td><span id="armorSpan" class="heroStats col-6 float-start toClose">Защита</span></td>
                    <td><span id="averageArmorSpan" class="heroStats col-6 toClose">@Armor</span></td>
                </tr>
                <tr>
                    <td><span id="magicResistSpan" class="heroStats col-6 float-start d-block toClose">Магическая защита</span></td>
                    <td><span id="averageMagicResistSpan" class="heroStats col-6 toClose">@MagicResist</span></td>
                </tr>
                <tr>
                    <td><span id="adSpan" class="heroStats col-6 float-start toClose">Урон</span></td>
                    <td><span id="averageADSpan" class="heroStats col-6 toClose">@Ad</span></td>
                </tr>
                <tr>
                    <td><span id="apSpan" class="heroStats col-6 float-start toClose">Сила умений</span></td>
                    <td><span id="averageAPSpan" class="heroStats col-6 toClose">@Ap</span></td>
                </tr>
                <tr>
                    <td><span id="critSpan" class="heroStats col-6 float-start toClose">Крит</span></td>
                    <td><span id="averageCritSpan" class="heroStats col-6 toClose">@Crit%</span></td>
                </tr>
                <tr>
                    <td><span id="movementSpan" class="heroStats col-6 float-start toClose">Скорость</span></td>
                    <td><span id="averageMovementSpan" class="heroStats col-6 toClose">@Movement</span></td>
                </tr>
                <tr>
                    <td><span id="attackSpeedSpan" class="heroStats col-6 float-start toClose">Скорость атаки</span></td>
                    <td><span id="averageAttackSpeedSpan" class="heroStats col-6 toClose">@Math.Round(Convert.ToDecimal(AttackSpeed), 2)</span></td>
                </tr>
            </table>
        </div> 
        }
        <div class="col-3">
            <h5 class="toClose heroStats">Результат симуляции</h5>
            <span id="damage" class="heroStats col-6 float-start toClose"></span>
            <span id="time" class="heroStats col-6 toClose"></span>
        </div>
    </div>

</div>

<script src="~/js/Simulate.js" asp-append-version="true"></script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}